

----Optimal--------------

If (a*b)%k==0, then
gcd(a,k) * gcd(b,k) % k is also 0

Let k=84, a=24, b=273

k = 84 = (2^2) * 3 * 7
a = 24 = (2^3) * 3
b = 273 = 3 * 7 * 13

gcd(a,k) = (2^2) * 3 (Common prime factors of a and k)
gcd(b,k) = 7 * 3 (Common prime factors of b and k)

gcd(a,k) * gcd(b,k) = (2^2) * (3^2) * 7
which has all prime factors of k thus a*b is divisble by k.




class Solution {
public:
    long long countPairs(vector<int>& nums, int k) {
        long long ans = 0; // Use long long for large sums
        unordered_map<int, int> gcdCount; // Map to store GCD counts

        for (int num : nums) {
            int currentGCD = gcd(num, k); // Calculate GCD of current number and k
            
            // Check how many previous GCDs can form valid pairs
            for (const auto& [prevGCD, count] : gcdCount) {
                if (static_cast<long long>(currentGCD) * prevGCD % k == 0) {
                    ans += count; // Count valid pairs
                }
            }
            
            // Update the count of the current GCD
            gcdCount[currentGCD]++;
        }

        return ans; // Return the total count of valid pairs
    }
};




-----brute force-------------

TLE - 

class Solution {
public:
    long long countPairs(vector<int>& nums, int k) {
        int n = nums.size(), cnt = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                if ((nums[i] * nums[j]) % k == 0) {
                    cnt++;
                }
            }
        }
        return cnt;
    }
};
