


Brute force  - 

class Solution {
public:
    int minimumSum(vector<int>& nums) {
        int n=nums.size();
        int ans=INT_MAX;
        for(int i=0;i<n-2;i++){
            for(int j=i+1;j<n-1;j++){
                for(int k=j+1;k<n;k++){
                    if(nums[i] < nums[j] && nums[k] < nums[j]) ans = min(ans,nums[i]+nums[j]+nums[k]);
                }
            }
        }
        
        return (ans==INT_MAX ? -1:ans);
    }
};

Optmized 

class Solution {
public:
    int minimumSum(vector<int>& nums) {
        int n=nums.size();
        int ans=INT_MAX;
        int l[100010], r[100010]; 
        l[0]= nums[0]; r[n-1]=nums[n-1];

        for(int i =1 ; i <n ; i++ ){
            l[i] = min(l[i-1], nums[i]);
        }
        for(int j =n-2 ; j >=1 ; j-- ){
            r[j] = min(r[j+1], nums[j]);
        }
        for(int i =1 ; i <n-1 ; i++){
            if(l[i]<nums[i] && r[i] <nums[i]){
                ans= min(ans ,  l[i] + nums[i] + r[i]);
            }
        }
        return (ans==INT_MAX ? -1: ans);
    }
};