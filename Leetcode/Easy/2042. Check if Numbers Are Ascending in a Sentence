Tc- O(n)
Sc- O(n)


class Solution {
public:
    bool areNumbersAscending(string s) {
        int maxnum = 0; // Initialize maxnum to track the last number found
        istringstream iss(s); // Use string stream to extract words
        string word;

        while (iss >> word) { // Read each word from the string
            if (isdigit(word[0])) { // Check if the first character is a digit
                int num = stoi(word); // Convert the word to an integer
                if (num <= maxnum) { // Check if the current number is not greater than maxnum
                    return false; // If not, return false
                }
                maxnum = num; // Update maxnum to the current number
            }
        }

        return true; // If all numbers are in ascending order, return true
    }
};



class Solution {
public:
    bool areNumbersAscending(string s) {
        int prev = 0; // Previous number
        int cur = 0;  // Current number

        for (char ch : s) {
            if (isdigit(ch)) {
                // Build the current number from digits
                cur = cur * 10 + (ch - '0');
            } else {
                // If we have a complete number
                if (cur != 0) {
                    // Check if the current number is not greater than the previous number
                    if (prev >= cur) {
                        return false; // Return false if not in ascending order
                    }
                    prev = cur; // Update previous number
                    cur = 0;    // Reset current number for the next iteration
                }
            }
        }

        // Final check for the last number
        return cur == 0 || prev < cur; // Check if the last number is valid
    }
};
