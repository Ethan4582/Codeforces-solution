------- Recursive apprach 

class Solution {
private:
string convert(int num){
    if(num<10){
        return ten[num];
    }
    if(num<20){
        return twnt[num-10];
    }
    if(num<100){
        return hund[num/10]+ (num%10 ? " " + convert(num%10) : "");
    }
    if(num<1000){
        return convert(num/100) + " " + "Hundred"+ (num%100 ? " " + convert(num%100) : "");
    }
     if (num < 1000000) {
            return convert(num / 1000) + " Thousand" + (num % 1000 ? " " + convert(num % 1000) : "");
        }
        if (num < 1000000000) {
            return convert(num / 1000000) + " Million" + (num % 1000000 ? " " + convert(num % 1000000) : "");
        }
        return convert(num / 1000000000) + " Billion" + (num % 1000000000 ? " " + convert(num % 1000000000) : "");
}
public:
    const vector<string> ten = { "", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine" };
    const vector<string> twnt = { "Ten", "Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen" };
    const vector<string> hund = { "", "Ten", "Twenty", "Thirty", "Forty", "Fifty", "Sixty", "Seventy", "Eighty", "Ninety" };
    string numberToWords(int num) {
        if(num==0){
            return "Zero";
        }   
        return convert(num);  
    }
};



--------------------Itreartive apprach -------------------------------------
