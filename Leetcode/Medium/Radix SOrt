void radixSort(vector<int>& arr) {
    if (arr.empty()) return;

    int maxVal = *max_element(arr.begin(), arr.end());

    for (int exp = 1; maxVal / exp > 0; exp *= 10) {
        int n = arr.size();
        vector<int> output(n);
        int count[10] = {0};

        // Count digits at current digit place
        for (int i = 0; i < n; i++)
            count[(arr[i] / exp) % 10]++;

        // Cumulative count
        for (int i = 1; i < 10; i++)
            count[i] += count[i - 1];

        // Build output array
        for (int i = n - 1; i >= 0; i--) {
            int digit = (arr[i] / exp) % 10;
            output[--count[digit]] = arr[i];
        }

        // Copy output to original array
        arr = output;
    }
}