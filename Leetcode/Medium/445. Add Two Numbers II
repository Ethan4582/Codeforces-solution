

class Solution {
private:
ListNode*  Lreverse(ListNode* l){
    ListNode* prev =nullptr; 
    ListNode* curr=l; 

    while(curr){
        ListNode* nxt= curr->next;
        curr->next= prev; 
        prev=curr; 
        curr=nxt;//jump
    }
    return prev;
}
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
          l1 = Lreverse(l1);  
        l2 = Lreverse(l2);
        int carry=0; 
        // tail is used to intreate and add new node to the summy node 
        ListNode dummy , *tail=&dummy; 
        while(l1 ||  l2 || carry){
            if(l1){
                carry+=l1->val;
                l1=l1->next;
            }
             if(l2){
                carry+=l2->val;
                l2=l2->next;
            }
            tail->next=new ListNode(carry%10); 
            tail= tail->next;
            carry/=10;
        }
        return Lreverse( dummy.next);
    }
};


-------------------------------------------------------------
