

class Solution {
public:
    int getDecimalValue(ListNode* head) {
        string ans = ""; 
        ListNode* temp = head; 
       
        while (temp != nullptr) {
            ans += to_string(temp->val); // Convert int to string
            temp = temp->next;
        }
        
        // Convert the binary string to decimal
        return stoi(ans, nullptr, 2);
    }
};


Time Complexity :: O(n) and Space Complexity :: O(n)

class Solution {
public:
    int getDecimalValue(ListNode* head) {
        string ans = ""; 
        ListNode* temp = head; 
       
        while (temp != nullptr) {
            ans += to_string(temp->val); // Convert int to string
            temp = temp->next;
        }

        int res=0 , pv=1;
        for( int i =ans.size()-1; i >=0 ; i--){
            res+=pv*(stoi(ans.substr( i , 1)));
            pv*=2;
        }
        return res;
    }
};


Time Complexity :: O(n) and Space Complexity :: O(1)

class Solution {
public:
    int getDecimalValue(ListNode* head) {
        int res=0;
        while(head!=NULL){
            res=res*2+head->val;
            head=head->next;
        }
        return res;
    }
};


class Solution {
public:
    int getDecimalValue(ListNode* head) {
        int res = 0;
        ListNode* iter = head;
        while (iter != NULL) {
            res <<= 1;
            res |= iter->val;
            iter = iter->next;
        }
        return res;
    }
};