

now using previous using 2 pinter 

class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
        if(head==nullptr) return head; 

        while(head!=nullptr && head->val==val ){
            head=head->next;
        }
        ListNode* curr=head;
         ListNode* prev=nullptr;

        while(curr!=nullptr ){
            if(curr->val==val){
                prev->next=curr->next;
                curr=curr->next;
            }else{
                prev=curr; 
                curr=curr->next;
                
            }
        }
        return head;
        
    }
};


  Solving the problem using a single pointer: current.

class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
        if(head==nullptr) return head; 

        while(head!=nullptr && head->val==val ){
            head=head->next;
        }
        ListNode* curr=head;
        while(curr!=nullptr && curr->next!=nullptr){
            if(curr->next->val==val){
                curr->next=curr->next->next;
            }else{
                curr=curr->next;
            }
        }
        return head;
        
    }
};